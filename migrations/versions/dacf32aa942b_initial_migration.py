"""Initial migration

Revision ID: dacf32aa942b
Revises: 
Create Date: 2025-08-17 23:17:37.290653

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dacf32aa942b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_budget')
    op.drop_table('integration')
    op.drop_table('project_contract')
    op.drop_table('project_budget_line')
    op.drop_table('commitment_item')
    op.drop_table('user')
    op.drop_table('cost_code')
    op.drop_table('commitment')
    op.drop_table('project_contract_item')
    with op.batch_alter_table('project_cost_type_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_project_cost_type_settings_cost_type'))
        batch_op.drop_index(batch_op.f('idx_project_cost_type_settings_project'))

    op.drop_table('project_cost_type_settings')
    op.drop_table('task')
    op.drop_table('project_contract_item_cost_type')
    op.drop_table('project_contract_item_cost_code')
    op.drop_table('chart_of_accounts')
    op.drop_table('project_cost_type_setting')
    op.drop_table('vendor')
    op.drop_table('project_contract_item_allocation')
    with op.batch_alter_table('cost_type', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cost_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))

    op.create_table('project_contract_item_allocation',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_item_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_code_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_item_vuid'], ['project_contract_item.vuid'], name=op.f('project_contract_item_allocation_contract_item_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_code_vuid'], ['cost_code.vuid'], name=op.f('project_contract_item_allocation_cost_code_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('project_contract_item_allocation_cost_type_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_contract_item_allocation_pkey'))
    )
    op.create_table('vendor',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('vendor_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('vendor_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('contact_person', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('fax', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('address_line1', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('address_line2', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('duns_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('business_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('credit_limit', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('payment_terms', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('discount_terms', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('insurance_certificate', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('insurance_expiry', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('workers_comp', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('liability_insurance', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('vendor_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('vuid', name='vendor_pkey'),
    sa.UniqueConstraint('vendor_name', name='vendor_vendor_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('vendor_number', name='vendor_vendor_number_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_cost_type_setting',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('project_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('expense_account', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_override', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('project_cost_type_setting_cost_type_vuid_fkey')),
    sa.ForeignKeyConstraint(['project_vuid'], ['project.vuid'], name=op.f('project_cost_type_setting_project_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_cost_type_setting_pkey'))
    )
    op.create_table('chart_of_accounts',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('account_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('account_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('account_category', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('account_subcategory', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('normal_balance', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('vuid', name=op.f('chart_of_accounts_pkey')),
    sa.UniqueConstraint('account_number', name=op.f('chart_of_accounts_account_number_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('project_contract_item_cost_code',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_item_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_code_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_item_vuid'], ['project_contract_item.vuid'], name=op.f('project_contract_item_cost_code_contract_item_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_code_vuid'], ['cost_code.vuid'], name=op.f('project_contract_item_cost_code_cost_code_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_contract_item_cost_code_pkey'))
    )
    op.create_table('project_contract_item_cost_type',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_item_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_item_vuid'], ['project_contract_item.vuid'], name=op.f('project_contract_item_cost_type_contract_item_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('project_contract_item_cost_type_cost_type_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_contract_item_cost_type_pkey'))
    )
    op.create_table('task',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('task_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('task_pkey'))
    )
    op.create_table('project_cost_type_settings',
    sa.Column('vuid', sa.VARCHAR(length=36), server_default=sa.text('(gen_random_uuid())::text'), autoincrement=False, nullable=False),
    sa.Column('project_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('expense_account', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_override', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('fk_project_cost_type_settings_cost_type'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_vuid'], ['project.vuid'], name=op.f('fk_project_cost_type_settings_project'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_cost_type_settings_pkey')),
    sa.UniqueConstraint('project_vuid', 'cost_type_vuid', name=op.f('unique_project_cost_type'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('project_cost_type_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_project_cost_type_settings_project'), ['project_vuid'], unique=False)
        batch_op.create_index(batch_op.f('idx_project_cost_type_settings_cost_type'), ['cost_type_vuid'], unique=False)

    op.create_table('project_contract_item',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('item_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('unit_price', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('cost_code_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('specifications', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('delivery_location', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('delivery_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('warranty_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_vuid'], ['project_contract.vuid'], name=op.f('project_contract_item_contract_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_code_vuid'], ['cost_code.vuid'], name=op.f('project_contract_item_cost_code_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('project_contract_item_cost_type_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_contract_item_pkey'))
    )
    op.create_table('commitment',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('commitment_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('project_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('vendor_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('commitment_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('commitment_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('commitment_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('approval_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('approved_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('approved_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('retainage', sa.NUMERIC(precision=5, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_vuid'], ['project.vuid'], name='commitment_project_vuid_fkey'),
    sa.ForeignKeyConstraint(['vendor_vuid'], ['vendor.vuid'], name='commitment_vendor_vuid_fkey'),
    sa.PrimaryKeyConstraint('vuid', name='commitment_pkey'),
    sa.UniqueConstraint('commitment_number', name='commitment_commitment_number_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('cost_code',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('division', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('division_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('vuid', name='cost_code_pkey'),
    sa.UniqueConstraint('cost_code', name='cost_code_cost_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name=op.f('user_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('commitment_item',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('commitment_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('item_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('cost_code_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('unit_of_measure', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(precision=15, scale=4), autoincrement=False, nullable=False),
    sa.Column('unit_price', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('retainage', sa.NUMERIC(precision=5, scale=2), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['commitment_vuid'], ['commitment.vuid'], name=op.f('commitment_item_commitment_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_code_vuid'], ['cost_code.vuid'], name=op.f('commitment_item_cost_code_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('commitment_item_cost_type_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('commitment_item_pkey'))
    )
    op.create_table('project_budget_line',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('budget_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_code_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cost_type_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('budget_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['budget_vuid'], ['project_budget.vuid'], name=op.f('project_budget_line_budget_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_code_vuid'], ['cost_code.vuid'], name=op.f('project_budget_line_cost_code_vuid_fkey')),
    sa.ForeignKeyConstraint(['cost_type_vuid'], ['cost_type.vuid'], name=op.f('project_budget_line_cost_type_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_budget_line_pkey'))
    )
    op.create_table('project_contract',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('project_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('contract_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('vendor_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('contract_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('payment_terms', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('delivery_terms', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('warranty_terms', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('delivery_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('approved_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('approved_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('signed_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('signed_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('attachments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_vuid'], ['project.vuid'], name=op.f('project_contract_project_vuid_fkey')),
    sa.ForeignKeyConstraint(['vendor_vuid'], ['vendor.vuid'], name=op.f('project_contract_vendor_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_contract_pkey')),
    sa.UniqueConstraint('contract_number', name=op.f('project_contract_contract_number_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('integration',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('integration_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('integration_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('client_secret', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('redirect_uri', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('webhook_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('api_key', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('base_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('last_sync', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('vuid', name=op.f('integration_pkey')),
    sa.UniqueConstraint('integration_name', name=op.f('integration_integration_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('project_budget',
    sa.Column('vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('project_vuid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('budget_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('post_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_vuid'], ['project.vuid'], name=op.f('project_budget_project_vuid_fkey')),
    sa.PrimaryKeyConstraint('vuid', name=op.f('project_budget_pkey'))
    )
    # ### end Alembic commands ###
